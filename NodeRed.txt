[{"id":"ecaffd35.5cd99","type":"switch","z":"deb0d57.1c46528","name":"Separate data; admin; logs","property":"eventType","rules":[{"t":"eq","v":"data"},{"t":"eq","v":"admin"},{"t":"eq","v":"logs"},{"t":"else"}],"checkall":"true","outputs":4,"x":500,"y":200,"wires":[["58ed3386.00172c","89783623.49b868","50ad5dbb.36fff4"],["d4a6df01.28fe6"],["327c5b2f.893324","8ca8507a.175f4"],["8746f52f.bcfd18"]]},{"id":"31f6f5e4.bd23ea","type":"debug","z":"deb0d57.1c46528","name":"Unexpected message type","active":true,"console":"false","complete":"payload","x":1184.9998779296875,"y":322.00001525878906,"wires":[]},{"id":"e775a426.da8de8","type":"debug","z":"deb0d57.1c46528","name":"","active":false,"console":"false","complete":"payload","x":880,"y":462.9999237060547,"wires":[]},{"id":"c39cb354.f28cc","type":"http in","z":"deb0d57.1c46528","name":"Web Monitor","url":"/sd14-hay-steamer/temp2","method":"get","upload":false,"swaggerDoc":"","x":128.7999725341797,"y":864.9999542236328,"wires":[["4fb9779b.28b3a8"]]},{"id":"4fb9779b.28b3a8","type":"template","z":"deb0d57.1c46528","name":"Build Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Nicky's Hot Stuff</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <style>\n        body {text-align: center; font-size: 2em; font: arial;}\n        .led {\n            margin: 2px auto;\n            margin-top: 40px; \n            margin-bottom: 0px;\n            width: 40px;\n            height: 40px;\n            background-color: black;\n            border-radius: 50%;\n            box-shadow: #000 0 -1px 7px 1px, inset #600 0 -1px 9px, #F00 0 2px 12px;\n        }\n        .wrapper {\n            height: 100%;\n            display: table;\n            width: 100%;\n            text-align: center;\n        }\n        .header {\n    \t    display: table-row;\n      \t    height: 1px;\n            font-size: 40px;\n    \t}\n    \t.main {\n      \t    height: 100%;\n      \t    display: table;\n      \t    width: 100%;\n    \t}\n    \t.box {\n      \t    display: table-cell;\n    \t}\n    \t.sidebar {\n      \t    width: 25%;\n        }\n        .content {\n            width: 50%;\n        }\n    \t.footer {\n      \t    display: table-row;\n      \t    height:1px;\n    \t}\n        .gauge {\n            display: inline-block;\n        }\n    </style>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"wsDisconnect();\">\n        <div class=\"wrapper\">\n            <div class=\"header\">Nicky's Hot Stuff</div>\n            <div class=\"main\">\n                <div class=\"box sidebar\"><p style=\"text-decoration: underline;\">Status</p>\n                    <div class=\"led\" id=\"LED1\"></div>\n                    <p>Ready</p>\n                    <div class=\"led\" id=\"LED2\"></div>\n                    <p>Steaming</p>\n                    <div class=\"led\" id=\"LED3\"></div>\n                    <p>Completed</p>\n                </div>\n                <div class=\"box content\"><br/>\n                    <div class=\"gauge\" id=\"g1\"></div>\n                </div>\n                <div class=\"box sidebar\"><p style=\"text-decoration: underline;\">Controls</p>\n                    <button type=\"button\" style=\"width: 100px; margin-top: 20px\" onclick='doit(\"state1\");'><p style=\"font-size:24px\">Reset</p></button><br/>\n                    <button type=\"button\" style=\"width: 100px; margin-top: 60px\" onclick='doit(\"state2\");'><p style=\"font-size:24px\">Steam</p></button><br/> \n                    <audio id=\"audiotag1\" src=\"http://www.pacdv.com/sounds/domestic_sound_effects/alarm_clock_1.wav\" preload=\"auto\"></audio>\n                </div>\n            </div>\n            <div class=\"footer\" id=\"status\"><p style=\"font-size:24px\"><p>Please wait for one of the lights to come on.</p></div>\n        </div>\n        <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1.1','packages':['gauge']}]}\"></script>\n        <script type=\"text/javascript\">\n            var g1data = google.visualization.arrayToDataTable([\n                ['Label', 'Value'],\n                ['℃', 0]\n            ]);\n            var m = new Array(\"-10\", \"0\", \"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\", \"80\", \"90\", \"100\", \"110\");\n            var options = {\n                width: 600, height: 400,\n                greenFrom: 75, greenTo: 85,\n                redFrom:90, redTo:92,\n                minorTicks: 5,\n                majorTicks: m,\n                max: 110,\n                min: -10\n            };\n            var chart = new google.visualization.Gauge(document.getElementById('g1'));\n            var state = 0;\n            var states = new Array(\"Ready\", \"Steaming\", \"Completed\");\n            var LED1state = new Array(\"red\", \"black\", \"black\");\n            var LED2state = new Array(\"black\", \"yellow\", \"black\");\n            var LED3state = new Array(\"black\", \"black\", \"hsl(120, 100%, 75%)\");\n            var ws;\n            var wsUri = \"ws:\";\n            var loc = window.location;\n            console.log(loc);\n            chart.draw(g1data, options);\n            if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n            // This needs to point to the web socket in the Node-RED flow\n            wsUri += \"//\" + loc.host + loc.pathname.replace(\"sd14-hay-steamer/temp2\",\"ws/sd14-hay-steamer/data2\");\n\n            function wsConnect() {\n                console.log(\"connect\",wsUri);\n                ws = new WebSocket(wsUri);\n                ws.onmessage = function(msg) {\n                    var line = \"\"; \n                    var s = 0;\n                    var data = JSON.parse(msg.data);\n                    console.log(data);\n                    g1data = google.visualization.arrayToDataTable([\n                        ['Label', 'Value'],\n                        ['℃', Math.round(data.temp)]\n                    ]);\n                    chart.draw(g1data, options);\n                    state = parseInt(data.state);\n                    s = state - 1;\n                    line = data.date + \" \" + states[s];\n                    document.getElementById('status').innerHTML = '<p>' + line + '</p>';\n                    document.getElementById('LED1').style.backgroundColor = LED1state[s];\n                    document.getElementById('LED2').style.backgroundColor = LED2state[s];\n                    document.getElementById('LED3').style.backgroundColor = LED3state[s];\n                    if (state == 3) {       // meaning it is Completed\n                        document.getElementById(\"audiotag1\").play();\n                    }\n                }\n                ws.onopen = function() {\n                    // update the status div with the connection status\n                    if (state == 0) {\n                        document.getElementById('status').innerHTML = '<p>Please wait for one of the lights to come on.</p>'\n                    } else {\n                        document.getElementById('status').innerHTML = '<p>connected</p>';\n                    }\n                    //ws.send(\"Open for data\");\n                    console.log(\"connected onopen\");\n                }\n                ws.onclose = function() {\n                    // update the status div with the connection status\n                    document.getElementById('status').innerHTML = '<p>not connected</p>';\n                    // in case of lost connection tries to reconnect every 3 secs\n                    setTimeout(wsConnect,3000);\n                }\n            }\n            \n            function wsDisconnect() {\n                console.log(\"disconnect\",wsUri)\n                ws.close();\n            }\n    \n            function doit(m) {\n                if (ws) { ws.send(m); \n               // update the buttonmsg div with an informative message\n                document.getElementById('status').innerHTML = '<p>Sending message ' + m + '</p>';\n                }\n            }\n        </script>\n    </body>\n</html>\n","x":519,"y":866.9999237060547,"wires":[["3b973b02.36f9b4"]]},{"id":"3ff00002.4d6a8","type":"inject","z":"deb0d57.1c46528","name":"Reboot","topic":"","payload":"reboot","payloadType":"string","repeat":"","crontab":"","once":false,"x":320,"y":773.9999389648437,"wires":[["68088efc.44032"]]},{"id":"a6dc2ab2.b7b978","type":"inject","z":"deb0d57.1c46528","name":"Shutdown","topic":"","payload":"shutdown","payloadType":"string","repeat":"","crontab":"","once":false,"x":313,"y":807.9999389648437,"wires":[["68088efc.44032"]]},{"id":"68088efc.44032","type":"switch","z":"deb0d57.1c46528","name":"","property":"payload","rules":[{"t":"eq","v":"reboot"},{"t":"eq","v":"shutdown"},{"t":"eq","v":"state1"},{"t":"eq","v":"state2"},{"t":"eq","v":"state3"},{"t":"eq","v":"state10"},{"t":"else"}],"checkall":"true","outputs":7,"x":492,"y":609.9999237060547,"wires":[["e13c32d5.b831b"],["248145cf.5695ea"],["69a6f5bf.229f2c"],["5a74331a.1ef38c"],["d051b63a.476a88"],["cdf26d0.cbe709"],["b7cc23d9.c3eac"]]},{"id":"76e9b9e8.44b3f8","type":"ibmiot out","z":"deb0d57.1c46528","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"000b8186046f","deviceType":"pjb-rpi","eventCommandType":"dkE20s*r19s!u","format":"json","data":"'will be replaced'","name":"Reboot command via IOTF","service":"registered","x":923,"y":506.99993896484375,"wires":[]},{"id":"cc938ab0.c8fb38","type":"ibmiot out","z":"deb0d57.1c46528","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"000b8186046f","deviceType":"pjb-rpi","eventCommandType":"gsYi21lu-!e8","format":"json","data":"'will be replaced'","name":"Shutdown command via IOTF","service":"registered","x":931,"y":540.9999389648437,"wires":[]},{"id":"e13c32d5.b831b","type":"template","z":"deb0d57.1c46528","name":"Reboot","field":"payload","format":"handlebars","template":"{\"message\":\"Hello World\"}","x":676,"y":506.9999542236328,"wires":[["76e9b9e8.44b3f8"]]},{"id":"fe3024e7.800008","type":"debug","z":"deb0d57.1c46528","name":"","active":true,"console":"false","complete":"false","x":887,"y":710.9999389648437,"wires":[]},{"id":"b7cc23d9.c3eac","type":"template","z":"deb0d57.1c46528","name":"Unsupported","field":"payload","format":"handlebars","template":"Unsupported command: {{payload}} !","x":698,"y":712,"wires":[["fe3024e7.800008"]]},{"id":"248145cf.5695ea","type":"template","z":"deb0d57.1c46528","name":"Shutdown","field":"payload","format":"handlebars","template":"{\"message\":\"Hello World\"}","x":685,"y":540.9999542236328,"wires":[["cc938ab0.c8fb38"]]},{"id":"79a504e5.89bc2c","type":"inject","z":"deb0d57.1c46528","name":"Reset","topic":"","payload":"state1","payloadType":"string","repeat":"","crontab":"","once":false,"x":110.99998474121094,"y":592.9999389648437,"wires":[["68088efc.44032"]]},{"id":"69a6f5bf.229f2c","type":"template","z":"deb0d57.1c46528","name":"Reset","field":"payload","format":"handlebars","template":"{\"state\":1}","x":676,"y":575.9999542236328,"wires":[["4ae3b75.375ca48"]]},{"id":"5a74331a.1ef38c","type":"template","z":"deb0d57.1c46528","name":"Steam","field":"payload","format":"handlebars","template":"{\"state\":2}","x":678,"y":609.9999542236328,"wires":[["4ae3b75.375ca48"]]},{"id":"d051b63a.476a88","type":"template","z":"deb0d57.1c46528","name":"Complete","field":"payload","format":"handlebars","template":"{\"state\":3}","x":688,"y":643.9999389648437,"wires":[["4ae3b75.375ca48"]]},{"id":"4ae3b75.375ca48","type":"ibmiot out","z":"deb0d57.1c46528","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"000b8186046f","deviceType":"pjb-rpi","eventCommandType":"setState","format":"json","data":"'will be replaced'","name":"setState command via IOTF","service":"registered","x":928,"y":608.9999389648437,"wires":[]},{"id":"100f811d.559edf","type":"inject","z":"deb0d57.1c46528","name":"Steam","topic":"","payload":"state2","payloadType":"string","repeat":"","crontab":"","once":false,"x":109.99998474121094,"y":640.9999389648437,"wires":[["68088efc.44032"]]},{"id":"55013da6.f17f04","type":"inject","z":"deb0d57.1c46528","name":"Complete","topic":"","payload":"state3","payloadType":"string","repeat":"","crontab":"","once":false,"x":112.99998474121094,"y":690.9999389648437,"wires":[["68088efc.44032"]]},{"id":"d80cc6d1.928b58","type":"websocket in","z":"deb0d57.1c46528","name":"","server":"44760105.37c1","client":"","x":161.99998474121094,"y":464.99989318847656,"wires":[["68088efc.44032","e775a426.da8de8"]]},{"id":"58ed3386.00172c","type":"websocket out","z":"deb0d57.1c46528","name":"","server":"44760105.37c1","client":"","x":950,"y":137,"wires":[]},{"id":"26ef62ed.ed8ade","type":"inject","z":"deb0d57.1c46528","name":"StopProgram","topic":"","payload":"state10","payloadType":"string","repeat":"","crontab":"","once":false,"x":305,"y":738.9999389648437,"wires":[["68088efc.44032"]]},{"id":"cdf26d0.cbe709","type":"template","z":"deb0d57.1c46528","name":"StopProgram","field":"payload","format":"handlebars","template":"{\"state\":10}","x":699,"y":677.9999389648437,"wires":[["4ae3b75.375ca48"]]},{"id":"6f0f8b25.6b19d4","type":"comment","z":"deb0d57.1c46528","name":"User Controls","info":"","x":103.79997253417969,"y":547.7999267578125,"wires":[]},{"id":"dc315b53.1c63b8","type":"comment","z":"deb0d57.1c46528","name":"Admin Controls","info":"","x":299.79998779296875,"y":700.7999267578125,"wires":[]},{"id":"fcf43a09.e90cf8","type":"ibmiot in","z":"deb0d57.1c46528","authentication":"boundService","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"000b8186046f","applicationId":"","deviceType":"RPi","eventType":"","commandType":"","format":"json","name":"SD14-Hay-Steamer-V2","service":"registered","allDevices":"","allApplications":"","allDeviceTypes":"","allLogicalInterfaces":false,"allEvents":true,"allCommands":"","allFormats":"","qos":"0","x":140,"y":200,"wires":[["ecaffd35.5cd99"]]},{"id":"89783623.49b868","type":"debug","z":"deb0d57.1c46528","name":"Show Data messages","active":false,"console":"false","complete":"payload","x":908.7999877929687,"y":98.80000305175781,"wires":[]},{"id":"8ca8507a.175f4","type":"cloudant out","z":"deb0d57.1c46528","name":"Store Log message","cloudant":"","database":"logs","service":"BTC-Hyperion-cloudantNoSQLDB","payonly":true,"operation":"insert","x":907.7999877929687,"y":279.8000030517578,"wires":[]},{"id":"d4a6df01.28fe6","type":"debug","z":"deb0d57.1c46528","name":"Show Admin messages","active":true,"console":"false","complete":"payload","x":914.7999877929687,"y":187.8000030517578,"wires":[]},{"id":"8746f52f.bcfd18","type":"template","z":"deb0d57.1c46528","name":"Unexpected message","field":"payload","format":"handlebars","template":"Unexpected message: {{payload}} !","x":915.7999877929687,"y":323.8000030517578,"wires":[["31f6f5e4.bd23ea"]]},{"id":"327c5b2f.893324","type":"debug","z":"deb0d57.1c46528","name":"Show Log messages","active":true,"console":"false","complete":"payload","x":911.7999877929687,"y":236.8000030517578,"wires":[]},{"id":"764e0cc2.13d3b4","type":"http request","z":"deb0d57.1c46528","name":"ThingSpeak","method":"POST","ret":"txt","url":"https://api.thingspeak.com/update.json?api_key=Y5GJMXA8DG5GRESM","x":1185.7999267578125,"y":48.79998779296875,"wires":[["7443e253.8a257c"]]},{"id":"892f4f44.e4d52","type":"debug","z":"deb0d57.1c46528","name":"","active":false,"console":"false","complete":"payload","x":1186.7999267578125,"y":96.80000305175781,"wires":[]},{"id":"7443e253.8a257c","type":"debug","z":"deb0d57.1c46528","name":"","active":false,"console":"false","complete":"payload","x":1358.7999267578125,"y":47.79998779296875,"wires":[]},{"id":"50ad5dbb.36fff4","type":"function","z":"deb0d57.1c46528","name":"Reformat data for ThingSpeak","func":"var line = \"\";\nline = line + \"field2=\" + msg.payload.temp;\nline = line + \"; field3=\" + msg.payload.state;\nline = line + \"; field4=\" + msg.payload.cpupct;\nline = line + \"; field5=\" + msg.payload.cpumem;\nline = line + \"; field6=\" + msg.payload.cputemp;\nmsg.payload = line;\nreturn msg;","outputs":1,"noerr":0,"x":937.7999877929687,"y":49.79998779296875,"wires":[["892f4f44.e4d52","764e0cc2.13d3b4"]]},{"id":"33f3db15.caf424","type":"http response","z":"deb0d57.1c46528","name":"","x":855.6000061035156,"y":943.5999908447266,"wires":[]},{"id":"c01a4904.8065d8","type":"http in","z":"deb0d57.1c46528","name":"ThingSpeak Monitor","url":"/sd14-hay-steamer/tsmon2","method":"get","upload":false,"swaggerDoc":"","x":124.5999755859375,"y":941.6000061035156,"wires":[["80825313.8e8da"]]},{"id":"80825313.8e8da","type":"template","z":"deb0d57.1c46528","name":"Build Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Nicky's Hot Stuff</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <style>\n        body {\n            text-align: center; \n            font-size: 2em; \n            font: arial;\n        }\n        .wrapper {\n            height: 100%;\n            display: table;\n            width: 100%;\n        }\n        .header {\n      \t    height: 1px;\n      \t    width: 100%;\n            font-size: 40px;\n    \t}\n    \t.main {\n      \t    height: 100%;\n      \t    display: table;\n      \t    width: 100%;\n    \t}\n    \t.box {\n      \t    display: table-cell;\n    \t}\n    \t.sidebar {\n      \t    width: 20%;\n        }\n        .content {\n            width: 40%;\n        }\n    \t.footer {\n      \t    height:1px;\n      \t    width: 100%;\n      \t    font-size: 24px;\n    \t}\n        .gauge {\n            display: inline-block;\n            height: 400px;\n            width: 400px;\n            margin: 0;\n            padding: 0;\n        }\n        .chart {\n            display: inline-block;\n            height: 300px;\n            width: 80%;\n            margin-top: 0;\n            border: 1px solid #cccccc;\n        }\n        .buttonlight {\n            height: 20%;\n            width: 60%;\n            margin: 10%;\n        }\n        .button3d{\n\t        position:relative;\n\t        height: 80px;\n            width: 200px;\n\t        display:block;\n  \t        text-decoration:none;  \n\t        margin:0;\n\t        border-radius:5px;\n\t        border:solid 1px #D94E3B;\n\t        text-align:center;\n\t        padding:20px 30px;\n\t        -webkit-transition: all 0.2s;\n\t        -moz-transition: all 0.2s;\n\t        transition: all 0.2s;\n        \t-webkit-box-shadow: 0px 9px 0px #84261a;\n            -moz-box-shadow: 0px 9px 0px #84261a;\n            box-shadow: 0px 9px 0px #84261a;\n            text-shadow: 0px  -1px 0px rgba(0,0,0,.5);\n            font-size: 24px;\n            vertical-align: middle;\n        }\n        .button3d:active{\n            -webkit-box-shadow: 0px 2px 0px #84261a;\n            -moz-box-shadow: 0px 2px 0px #84261a;\n            box-shadow: 0px 2px 0px #84261a;\n            position:relative;\n            top:7px;\n        }\n        .button3d:hover {\n            color: yellow;\n        }\n    </style>\n    </head>\n    <body onload=\"initPage();\">\n        <div class=\"wrapper\">\n            <div class=\"main\">\n               <div class=\"box sidebar\"><br/>\n                    <button id=\"LED1\" type=\"button\" class=\"button3d\" onclick='doit(\"state1\");'>Ready</button><br/>\n                    <button id=\"LED2\" type=\"button\" class=\"button3d\" onclick='doit(\"state2\");'>Steaming</button><br/> \n                    <button id=\"LED3\" type=\"button\" class=\"button3d\" onclick='doit(\"state3\");'>Completed</button><br/> \n                    <audio id=\"audiotag1\" src=\"http://www.wavlist.com/soundfx/020/clock-alarm3.wav\" preload=\"auto\"></audio>\n                </div>\n                <div class=\"box content\">\n                    <p class=\"header\">Nicky's Hot Stuff</p>\n                    <div class=\"gauge\" id=\"g1\"></div>\n                    <p class=\"footer\" id=\"status\">Please wait; connecting...</p>\n                </div>\n                <div class=\"box content\"><br/>\n                    <iframe class=\"chart\" src=\"https://thingspeak.com/channels/68030/charts/2?api_key=G9E98ZR9DJV59O4L&amp;yaxismax=100&amp;yaxismin=0&amp;results=60&amp;dynamic=true&amp;yaxis=Degrees%20Celsius&amp;title=Hay%20Temperature\"></iframe>\n                </div>\n            </div>\n        </div>\n        <script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'></script>\n        <script type='text/javascript' src='https://www.google.com/jsapi'></script>\n        <script type=\"text/javascript\" src=\"//thingspeak.com/highcharts-3.0.8.js\"></script>\n        <script type=\"text/javascript\" src=\"//thingspeak.com/exporting.js\"></script>\n        <script type='text/javascript'>\n            var channel_id = 68030;                             // set your channel id here\n            var api_key = 'G9E98ZR9DJV59O4L';                   // set your channel's read api key here if necessary\n            var max_gauge_value = 110;\n            var gauge_name = '\\xB0C';\n            var chart, charts, data;                            // global variables\n            var state = 0;\n            var states = new Array(\"Ready\", \"Steaming\", \"Completed\");\n            var css_up = \"box-shadow: 0px 9px 0px #84261a;\";\n            var css_down = \"box-shadow: 0px 2px 0px #84261a; position: relative; top: 7px;\";\n            var ws;\n            var wsUri = \"ws:\";\n            var loc = window.location;\n\n            if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n            // This needs to point to the web socket in the Node-RED flow\n            wsUri += \"//\" + loc.host + loc.pathname.replace(\"sd14-hay-steamer/tsmon2\",\"ws/sd14-hay-steamer/data2\");\n\n            google.load('visualization', '1', {packages:['gauge']});            // load the google gauge visualization\n            google.setOnLoadCallback(initChart);\n            function displayData(point) {                       // display the data\n                data.setValue(0, 0, gauge_name);\n                data.setValue(0, 1, point);\n                chart.draw(data, options);\n            }\n            function loadData() {                               // load the data\n                var temp, state;                                          // variable for the data point\n                // get the data from thingspeak\n                $.getJSON('https://api.thingspeak.com/channels/' + channel_id + '/feed/last.json?api_key=' + api_key, function(data) {\n                    sample_time = data.field1;                  // get the timestamp of the latest reading\n                    temp = data.field2;                            // get the data point\n                    if (temp) {                                    // if there is a data point display it\n                        temp = Math.round(temp);\n                        displayData(temp);\n                    }\n                    state = data.field3;                           // discover whether we are \"Ready\", \"Steaming\" or \"Completed\"\n                    if (state) {\n                        s = state - 1;\n                        statusmsg(states[s]);\n                        switch(state) {\n                            case \"1\":\n                                document.getElementById('LED1').style.cssText = css_up;                 // pop the button back up again\n                                document.getElementById('LED1').style.backgroundColor = \"red\";\n                                document.getElementById('LED2').style.backgroundColor = \"lightgray\";\n                                document.getElementById('LED3').style.backgroundColor = \"lightgray\";\n                                break;\n                            case \"2\":\n                                document.getElementById('LED2').style.cssText = css_up;                 // pop the button back up again\n                                document.getElementById('LED1').style.backgroundColor = \"lightgray\";\n                                document.getElementById('LED2').style.backgroundColor = \"yellow\";\n                                document.getElementById('LED3').style.backgroundColor = \"lightgray\";\n                                break;\n                            case \"3\":\n                                document.getElementById('LED3').style.cssText = css_up;                 // pop the button back up again\n                                document.getElementById('LED1').style.backgroundColor = \"lightgray\";\n                                document.getElementById('LED2').style.backgroundColor = \"lightgray\";\n                                document.getElementById('LED3').style.backgroundColor = \"hsl(120, 100%, 75%)\";\n                                document.getElementById(\"audiotag1\").play();\n                                break;\n                            default:\n                        }\n                    }\n                });\n            }\n            function initChart() {                              // initialize the chart\n                data = new google.visualization.DataTable();\n                data.addColumn('string', 'Label');\n                data.addColumn('number', 'Value');\n                data.addRows(1);\n                chart = new google.visualization.Gauge(document.getElementById('g1'));\n                var m = new Array(\"-10\", \"0\", \"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\", \"80\", \"90\", \"100\", \"110\");\n                options = {redFrom: 90, redTo: 92, greenFrom: 75, greenTo: 85, minorTicks: 5, majorTicks: m, max: 110, min: -10};\n                loadData();\n                setInterval('loadData()', 5000);                // load new data every 5 seconds\n            }\n            function doit(m) {\n                if (ws) { ws.send(m); \n               // update the buttonmsg div with an informative message\n                statusmsg(\"Sending message \" + m);\n                    switch(m) {\n                        case(\"state1\"):\n                            document.getElementById('LED1').style.cssText = css_down;                 // keep the button down until state change is acknowledged\n                            break;\n                        case(\"state2\"):\n                            document.getElementById('LED2').style.cssText = css_down;                 // keep the button down until state change is acknowledged\n                            break;\n                        case(\"state3\"):\n                            document.getElementById('LED3').style.cssText = css_down;                 // keep the button down until state change is acknowledged\n                            break;\n                        default:\n                    }\n                }\n            }\n            function wsConnect() {\n                ws = new WebSocket(wsUri);\n                ws.onmessage = function(msg) {\n                    var line = \"\"; \n                    var s = 0;\n                    var data = JSON.parse(msg.data);\n                }\n                ws.onopen = function() {\n                    if (state == 0) {\n                        statusmsg(\"Please wait; connecting...\");\n                    } else {\n                        statusmsg(\"Connected\");\n                    }\n                    console.log(\"connected onopen\");\n                }\n                ws.onclose = function() {\n                    statusmsg(\"Not connected\");\n                    // in case of lost connection tries to reconnect every 3 secs\n                    setTimeout(wsConnect,3000);\n                }\n            }\n            function initPage() {\n                wsConnect();\n            }\n            function statusmsg(m) {\n                document.getElementById('status').innerHTML = '<p>' + sample_time + \" \" + m + '</p>';\n            }\n        </script>\n    </body>\n</html>\n","x":514.8000030517578,"y":943.5999755859375,"wires":[["33f3db15.caf424"]]},{"id":"3b973b02.36f9b4","type":"http response","z":"deb0d57.1c46528","name":"","x":845.7166442871094,"y":864.7166595458984,"wires":[]},{"id":"44760105.37c1","type":"websocket-listener","z":"","path":"/ws/sd14-hay-steamer/data2","wholemsg":"false"}]